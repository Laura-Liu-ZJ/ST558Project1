TeamTotal <- GetData(url("TeamTotal"))$data
franchise
TeamTotal
CData <- function(kind){
for(i in 1:38){
y <- NULL
x <- GetData(url(kind,ID=as.character(i)))$data
y <- rbind(x,y)
}
return(y)
}
CData("season")
# season_id2
# goalie
# skater
# call above two functions together to get specific data
franchise <- GetData(url("base"))$data
TeamTotal <- GetData(url("TeamTotal"))$data
franchise
TeamTotal
CData <- function(kind){
y <- NULL
for(i in 1:38){
x <- GetData(url(kind,ID=as.character(i)))$data
y <- rbind(x,y)
}
return(y)
}
CData("season")
# season_id2
# goalie
# skater
# call above two functions together to get specific data
franchise <- GetData(url("base"))$data
TeamTotal <- GetData(url("TeamTotal"))$data
franchise
TeamTotal
CData <- function(kind){
for(i in 1:38){
x <- GetData(url(kind,ID=as.character(i)))$data
y <- rbind(x,y)
}
return(y)
}
CData("season")
# prepare for the packages
library(c=("httr","jsonlite","tidyverse","DT"))
# prepare for the packages
library(c("httr","jsonlite","tidyverse","DT"))
# prepare for the packages
library(list("httr","jsonlite","tidyverse","DT"))
# prepare for the packages
library(httr)
library(jsonlite)
library(tidyverse)
library(DT)
# call above two functions together to get specific data
Franchise <- GetData(url("base"))$data
TeamTotal <- GetData(url("TeamTotal"))$data
CData <- function(kind){
y <- NULL
for(i in 1:38){
x <- GetData(url(kind,ID=as.character(i)))$data
y <- rbind(x,y)
}
return(y)
}
Seanson <- CData("season")
Goalie <- CData("goalie")
Skater <- CData("skater")
datatable(Franchise)
datatable(TeamTotal)
datatable(Seanson)
datatable(Goalie)
datatable(Skater)
# call above two functions together to get specific data
Franchise <- GetData(url("base"))$data
TeamTotal <- GetData(url("TeamTotal"))$data
# write a function to combine all the id(1-38) of specific table
CData <- function(kind){
y <- NULL
for(i in 1:38){
x <- GetData(url(kind,ID=as.character(i)))$data
y <- rbind(x,y)
}
return(y)
}
# get the season table of all id
Season <- CData("season")
# get the goalie table of all id
Goalie <- CData("goalie")
# get the skater table of all id
Skater <- CData("skater")
datatable(Franchise)
datatable(TeamTotal)
datatable(Season)
datatable(Goalie)
datatable(Skater)
datatable(Franchise)
datatable(TeamTotal)
datatable(Season)
datatable(Goalie)
datatable(Skater)
include_graphics("D:/2020_3rd_semester/ST558/6. Project/WeaverLankow.jpg")
knitr::opts_chunk$set(
collapse = TRUE,
echo = TRUE,
message = FALSE,
warning = FALSE,
comment = "#>"
)
# prepare for the packages
library(httr)
library(jsonlite)
library(tidyverse)
library(DT)
library(knitr)
include_graphics("D:/2020_3rd_semester/ST558/6. Project/WeaverLankow.jpg")
include_graphics("D:/2020_3rd_semester/ST558/6. Project/Nhldefunctteams.png")
# view the data set
tbl_df(Franchise)
tbl_df(TeamTotal)
tbl_df(Season)
tbl_df(Goalie)
tbl_df(Skater)
# view the data set
datatable(Franchise) %>% select (id,contains("Name"))
knitr::opts_chunk$set(
collapse = TRUE,
echo = TRUE,
message = FALSE,
warning = FALSE,
comment = "#>"
)
# prepare for the packages
library(httr)
library(jsonlite)
library(tidyverse)
library(DT)
library(knitr)
include_graphics("D:/2020_3rd_semester/ST558/6. Project/WeaverLankow.jpg")
# write a function to get specific url
url <- function(kind,ID=NULL){
base_url <- "https://records.nhl.com/site/api/franchise"
if(kind == "base"){
return("https://records.nhl.com/site/api/franchise")}
else if(kind == "TeamTotal"){
return( paste(base_url, "team","totals", sep="-"))
}else{
return(paste0(paste(base_url,kind,"records",sep="-"),"?",paste("cayenneExp","franchiseId",ID,sep="=")))
}
}
# write a function to get data from specific url
GetData <- function(url){
url %>%
GET(.) %>%
# turn it into JSON text form
content(as="text") %>%
# convert it to a list
fromJSON(flatten=TRUE)
}
# call above two functions together to get specific data
Franchise <- GetData(url("base"))$data
TeamTotal <- GetData(url("TeamTotal"))$data
# write a function to combine all the id(1-38) of specific table
CData <- function(kind){
y <- NULL
for(i in 1:38){
x <- GetData(url(kind,ID=as.character(i)))$data
y <- rbind(x,y)
}
return(y)
}
# get the season table of all id
Season <- CData("season")
# get the goalie table of all id
Goalie <- CData("goalie")
# get the skater table of all id
Skater <- CData("skater")
# prepare for the packages
library(httr)
library(jsonlite)
library(tidyverse)
library(DT)
library(knitr)
# view the data set
datatable(Franchise) %>% select(id,contains("Name"))
# view the data set
tbl_df(Franchise) %>% select(id,contains("Name"))
tbl_df(TeamTotal)
tbl_df(Season)
tbl_df(Goalie)
tbl_df(Skater)
# view the data set
tbl_df(Franchise) %>% select(id,contains("Name")) %>% rename(id = "FranchiseId")
# view the data set
tbl_df(Franchise) %>% select(id,contains("Name")) %>% rename("FranchiseId"=id)
tbl_df(TeamTotal)
tbl_df(Season)
tbl_df(Goalie)
tbl_df(Skater)
knitr::opts_chunk$set(echo = TRUE)
# reading data
library(readr)
data <- read_csv(file="D:/2020_3rd_semester/ST542/5. Project/Child_Level_Data.csv")
# reading data
library(readr)
data <- read_csv(file="D:/2020_3rd_semester/ST542/5. Project/Child_Level_Data.csv")
data
table(data$Intervention_Status)
# reading data
library(readr)
library(tidyverse)
RawData <- read_csv(file="D:/2020_3rd_semester/ST542/5. Project/Child_Level_Data.csv")
FFVPData <- RawData %>%
select(School_Class_ID,Date,Intervention_Status,Fruit_Veggie_Consumed) %>%
filter(Intervention_Status == "Fresh Fruit and Vegetable Program")
NData <- RawData %>%
select(School_Class_ID,Date,Intervention_Status,Fruit_Veggie_Consumed) %>%
filter(Intervention_Status == "Non")
FFVPData
NData
# reading data
library(readr)
library(tidyverse)
RawData <- read_csv(file="D:/2020_3rd_semester/ST542/5. Project/Child_Level_Data.csv")
FFVPData <- RawData %>%
select(School_Class_ID,Date,Intervention_Status,Fruit_Veggie_Consumed) %>%
filter(Intervention_Status == "Fresh Fruit and Vegetable Program")
NData <- RawData %>%
select(School_Class_ID,Date,Intervention_Status,Fruit_Veggie_Consumed) %>%
filter(Intervention_Status == "Non")
library(DT)
datatable(FFVPData)
datatable(NData)
t.test(FFVPData$Fruit_Veggie_Consumed,NData$Intervention_Status)
t.test(Fruit_Veggie_Consumed ~ Intervention_Status, data = RawData)
RawData
table(RawData$Program)
t.test(Fruit_Veggie_Consumed ~ Intervention_Status, data = RawData)
plot(Fruit_Veggie_Consumed ~ Intervention_Status, data = RawData)
require(graphics)
t.test(1:10, y = c(7:20))      # P = .00001855
t.test(1:10, y = c(7:20, 200)) # P = .1245    -- NOT significant anymore
## Classical example: Student's sleep data
plot(extra ~ group, data = sleep)
## Traditional interface
with(sleep, t.test(extra[group == 1], extra[group == 2]))
## Formula interface
t.test(extra ~ group, data = sleep)
t.test(Fruit_Veggie_Consumed ~ Intervention_Status, data = RawData,alternative="greater")
library(graphics)
plot(Fruit_Veggie_Consumed ~ Intervention_Status, data = RawData)
t.test(Fruit_Veggie_Consumed ~ Intervention_Status, data = RawData,alternative="greater")
library(graphics)
plot(Fruit_Veggie_Consumed ~ Intervention_Status, data = RawData,alternative="greater")
t.test(Fruit_Veggie_Consumed ~ Intervention_Status, data = RawData,alternative="greater")
ggplot(RawData,aes(x=Intervention_Status,y=Fruit_Veggie_Consumed))+
geom_point(aes(color=Intervention_Status))+
geom_boxplot()
t.test(Fruit_Veggie_Consumed ~ Intervention_Status, data = RawData,alternative="greater")
ggplot(RawData,aes(x=Intervention_Status,y=Fruit_Veggie_Consumed))+
geom_point(aes(color=Intervention_Status))+
geom_boxplot(position="jitter")
t.test(Fruit_Veggie_Consumed ~ Intervention_Status, data = RawData,alternative="greater")
ggplot(RawData,aes(x=Intervention_Status,y=Fruit_Veggie_Consumed))+
geom_point(aes(color=Intervention_Status),position = "jitter")+
geom_boxplot()
t.test(Fruit_Veggie_Consumed ~ Intervention_Status, data = RawData, alternative="less")
ggplot(RawData,aes(x=Intervention_Status,y=Fruit_Veggie_Consumed))+
geom_point(aes(color=Intervention_Status),position = "jitter")+
geom_boxplot()
wilcox.test(Fruit_Veggie_Consumed ~ Intervention_Status, data = RawData, alternative="less")
t.test(Fruit_Veggie_Consumed ~ Intervention_Status, data = RawData, alternative="less")
ggplot(RawData,aes(x=Intervention_Status,y=Fruit_Veggie_Consumed))+
geom_boxplot()+
geom_point(aes(color=Intervention_Status),position = "jitter")
t.test(Fruit_Veggie_Consumed ~ Intervention_Status, data = RawData, alternative="less")
ggplot(RawData,aes(x=Intervention_Status,y=Fruit_Veggie_Consumed))+
geom_point(aes(color=Intervention_Status),position = "jitter")+
geom_boxplot()
wilcox.test(Fruit_Veggie_Consumed ~ Intervention_Status, data = RawData)
wilcox.test(Fruit_Veggie_Consumed ~ Intervention_Status, data = RawData, alternative="less")
wilcox.test(Fruit_Veggie_Consumed ~ Intervention_Status, data = RawData, alternative="greater")
wilcox.test(Fruit_Veggie_Consumed ~ Intervention_Status, data = RawData)
wilcox.test(Fruit_Veggie_Consumed ~ Intervention_Status, data = RawData, alternative="less",exact = FALSE, correct = FALSE)
wilcox.test(FFVPData$Fruit_Veggie_Consumed-NData$Fruit_Veggie_Consumed, alternative="less")
wilcox.test(Fruit_Veggie_Consumed ~ Intervention_Status, data = RawData)
wilcox.test(Fruit_Veggie_Consumed ~ Intervention_Status, data = RawData, alternative="less",exact = FALSE, correct = FALSE)
wilcox.test(FFVPData$Fruit_Veggie_Consumed-NData$Fruit_Veggie_Consumed, alternative="greater")
wilcox.test(Fruit_Veggie_Consumed ~ Intervention_Status, data = RawData)
wilcox.test(Fruit_Veggie_Consumed ~ Intervention_Status, data = RawData, alternative="greater",exact = FALSE, correct = FALSE)
wilcox.test(Fruit_Veggie_Consumed ~ Intervention_Status, data = RawData, alternative="greater",exact = FALSE, correct = FALSE)
t.test(Fruit_Veggie_Consumed ~ Intervention_Status, data = RawData, alternative="less")
t.test(FFVPData$Fruit_Veggie_Consumed-NData$Fruit_Veggie_Consumed,alternative="greater")
ggplot(RawData,aes(x=Intervention_Status,y=Fruit_Veggie_Consumed))+
geom_point(aes(color=Intervention_Status),position = "jitter")+
geom_boxplot()
t.test(Fruit_Veggie_Consumed ~ Intervention_Status, data = RawData, alternative="less")
t.test(FFVPData$Fruit_Veggie_Consumed,NData$Fruit_Veggie_Consumed,alternative="greater")
ggplot(RawData,aes(x=Intervention_Status,y=Fruit_Veggie_Consumed))+
geom_point(aes(color=Intervention_Status),position = "jitter")+
geom_boxplot()
t.test(Fruit_Veggie_Consumed ~ Intervention_Status, data = RawData, alternative="greater")
t.test(FFVPData$Fruit_Veggie_Consumed,NData$Fruit_Veggie_Consumed,alternative="greater")
ggplot(RawData,aes(x=Intervention_Status,y=Fruit_Veggie_Consumed))+
geom_point(aes(color=Intervention_Status),position = "jitter")+
geom_boxplot()
t.test(Fruit_Veggie_Consumed ~ Intervention_Status, data = RawData, alternative="greater")
ggplot(RawData,aes(x=Intervention_Status,y=Fruit_Veggie_Consumed))+
geom_point(aes(color=Intervention_Status),position = "jitter")+
geom_boxplot()
library(ICSNP)
HotellingsT2(Fruit_Veggie_Consumed ~ Intervention_Status, data = RawData, alternative="greater")
library(ICSNP)
HotellingsT2(RawData$Fruit_Veggie_Consumed ~ RawData$Intervention_Status, alternative="greater")
library(ICSNP)
HotellingsT2(RawData$Fruit_Veggie_Consumed ~ RawData$Intervention_Status, alternative="greater")
HotellingsT2(FFVPData$Fruit_Veggie_Consumed, NData$Fruit_Veggie_Consumed , alternative="greater")
library(ICSNP)
HotellingsT2(RawData$Fruit_Veggie_Consumed ~ RawData$Intervention_Status, alternative="greater")
HotellingsT2(FFVPData$Fruit_Veggie_Consumed, NData$Fruit_Veggie_Consumed, alternative="greater")
library(ICSNP)
HotellingsT2(RawData$Fruit_Veggie_Consumed ~ RawData$Intervention_Status, alternative="greater")
HotellingsT2(FFVPData$Fruit_Veggie_Consumed, NData$Fruit_Veggie_Consumed)
X <- rmvnorm(20, c(0, 0, 0, 0), diag(1:4))
Y <- rmvnorm(30, c(0.5, 0.5, 0.5, 0.5), diag(1:4))
X
Y
library(ICSNP)
HotellingsT2(RawData$Fruit_Veggie_Consumed ~ RawData$Intervention_Status, alternative="greater")
HotellingsT2(t(FFVPData$Fruit_Veggie_Consumed), t(NData$Fruit_Veggie_Consumed))
library(ICSNP)
HotellingsT2(RawData$Fruit_Veggie_Consumed ~ RawData$Intervention_Status, alternative="greater")
library(ICSNP)
HotellingsT2(RawData$Fruit_Veggie_Consumed ~ RawData$Intervention_Status, alternative="less")
library(ICSNP)
HotellingsT2(RawData$Fruit_Veggie_Consumed ~ RawData$Intervention_Status, alternative="greater")
library(ICSNP)
HotellingsT2(RawData$Fruit_Veggie_Consumed ~ RawData$Intervention_Status, alternative="lesser")
library(ICSNP)
HotellingsT2(RawData$Fruit_Veggie_Consumed ~ RawData$Intervention_Status, alternative="one.sided")
library(ICSNP)
HotellingsT2(RawData$Fruit_Veggie_Consumed ~ RawData$Intervention_Status)
library(ICSNP)
HotellingsT2(RawData$Fruit_Veggie_Consumed ~ RawData$Intervention_Status,test="chi")
# reading data
library(readr)
library(tidyverse)
RawData <- read_csv(file="D:/2020_3rd_semester/ST542/5. Project/Child_Level_Data.csv")
FFVPData <- RawData %>%
select(School_Class_ID,Date,Intervention_Status,Fruit_Veggie_Consumed) %>%
filter(Intervention_Status == "Fresh Fruit and Vegetable Program")
NData <- RawData %>%
select(School_Class_ID,Date,Intervention_Status,Fruit_Veggie_Consumed) %>%
filter(Intervention_Status == "Non")
RawData %>% filter(Fruit_Veggie_Consumed != 0)
library(DT)
datatable(FFVPData)
datatable(NData)
Drop0 <- RawData %>% filter(Fruit_Veggie_Consumed != 0)
table(Drop0$Fruit_Veggie_Consumed)
t.test(Fruit_Veggie_Consumed ~ Intervention_Status, data = Drop0, alternative="greater")
ggplot(Drop0,aes(x=Intervention_Status,y=Fruit_Veggie_Consumed))+
geom_point(aes(color=Intervention_Status),position = "jitter")+
geom_boxplot()
RawData
PctData <- RawData %>% mutate(Total_Consumed/Fruit_Veggie_Consumed*100)
PctData
PctData <- RawData %>% mutate(pct=Total_Consumed/Fruit_Veggie_Consumed*100)
PctData
PctData <- RawData %>% mutate(pct=Fruit_Veggie_Consumed/Total_Consumed*100)
PctData
PctData <- RawData %>% mutate(pct=Fruit_Veggie_Consumed/Total_Consumed*100)
table(PctData$Fruit_Veggie_Consumed)
PctData <- RawData %>% mutate(pct=Fruit_Veggie_Consumed/Total_Consumed*100)
table(PctData$pct)
PctData <- RawData %>% mutate(pct=Fruit_Veggie_Consumed/Total_Consumed*100)
PctData$pct
PctData <- RawData %>% mutate(pct=Fruit_Veggie_Consumed/Total_Consumed*100)
table(PctData$pct)
RawData
PctData
RawData
PctData$pct
table(PctData$pct)
RawData
PctData
PctData %>% filter(pct < 10)
PctData %>% filter(pct < 10 & pct >0)
# t.test(Fruit_Veggie_Consumed ~ Intervention_Status, data = RawData, alternative="greater")
ggplot(PctData,aes(x=Intervention_Status,y=Fruit_Veggie_Consumed))+
geom_point(aes(color=Intervention_Status),position = "jitter")+
geom_boxplot()
# t.test(Fruit_Veggie_Consumed ~ Intervention_Status, data = RawData, alternative="greater")
ggplot(PctData,aes(x=Intervention_Status,y=pct))+
geom_point(aes(color=Intervention_Status),position = "jitter")+
geom_boxplot()
t.test(pct ~ Intervention_Status, data = PctData, alternative="greater")
wilcox.test(pct ~ Intervention_Status, data = PctData, alternative="greater",exact = FALSE, correct = FALSE)
library(ICSNP)
HotellingsT2(PctData$pct ~ PctData$pct,test="chi")
library(ICSNP)
HotellingsT2(PctData$pct ~ PctData$Intervention_Status,test="chi")
wilcox.test(pct ~ Intervention_Status, data = PctData, alternative="greater",exact = FALSE, correct = FALSE)
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
# reading data
library(readr)
library(tidyverse)
RawData <- read_csv(file="D:/2020_3rd_semester/ST542/5. Project/Child_Level_Data.csv")
# FFVPData <- RawData %>%
#   select(School_Class_ID,Date,Intervention_Status,Fruit_Veggie_Consumed) %>%
#   filter(Intervention_Status == "Fresh Fruit and Vegetable Program")
# NData <- RawData %>%
#   select(School_Class_ID,Date,Intervention_Status,Fruit_Veggie_Consumed) %>%
#   filter(Intervention_Status == "Non")
RawData
ggplot(RawData,aes(x=Intervention_Status,y=Fruit_Veggie_Consumed))+
geom_point(aes(color=Intervention_Status),position = "jitter")+
geom_boxplot()
# reading data
library(readr)
library(tidyverse)
RawData <- read_csv(file="D:/2020_3rd_semester/ST542/5. Project/Child_Level_Data.csv")
# FFVPData <- RawData %>%
#   select(School_Class_ID,Date,Intervention_Status,Fruit_Veggie_Consumed) %>%
#   filter(Intervention_Status == "Fresh Fruit and Vegetable Program")
# NData <- RawData %>%
#   select(School_Class_ID,Date,Intervention_Status,Fruit_Veggie_Consumed) %>%
#   filter(Intervention_Status == "Non")
ggplot(RawData,aes(x=Intervention_Status,y=Fruit_Veggie_Consumed))+
geom_point(aes(color=Intervention_Status),position = "jitter")+
geom_boxplot()
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
# reading data
library(readr)
library(tidyverse)
RawData <- read_csv(file="D:/2020_3rd_semester/ST542/5. Project/Child_Level_Data.csv")
# FFVPData <- RawData %>%
#   select(School_Class_ID,Date,Intervention_Status,Fruit_Veggie_Consumed) %>%
#   filter(Intervention_Status == "Fresh Fruit and Vegetable Program")
# NData <- RawData %>%
#   select(School_Class_ID,Date,Intervention_Status,Fruit_Veggie_Consumed) %>%
#   filter(Intervention_Status == "Non")
ggplot(RawData,aes(x=Intervention_Status,y=Fruit_Veggie_Consumed))+
geom_point(aes(color=Intervention_Status),position = "jitter")+
geom_boxplot()
t.test(Fruit_Veggie_Consumed ~ Intervention_Status, data = RawData, alternative="greater")
wilcox.test(Fruit_Veggie_Consumed ~ Intervention_Status, data = RawData, alternative="greater",exact = FALSE, correct = FALSE)
PctData <- RawData %>% mutate(pct=Fruit_Veggie_Consumed/Total_Consumed*100)
ggplot(PctData,aes(x=Intervention_Status,y=pct))+
geom_point(aes(color=Intervention_Status),position = "jitter")+
geom_boxplot()
t.test(pct ~ Intervention_Status, data = PctData, alternative="greater")
wilcox.test(pct ~ Intervention_Status, data = PctData, alternative="greater",exact = FALSE, correct = FALSE)
# view the data set
tbl_df(Franchise) %>% select(id,contains("Name")) %>% rename("franchiseId"=id)
tbl_df(TeamTotal) %>% select(franchiseId,teamId,activeFranchise,gameTypeId,losses,win,ties,points,pointPctg)
# view the data set
tbl_df(Franchise) %>% select(id,contains("Name")) %>% rename("franchiseId"=id)
tbl_df(TeamTotal) %>% select(franchiseId,teamId,activeFranchise,gameTypeId,losses,wins,ties,points,pointPctg)
tbl_df(Season) %>% select(6,8,10,12,13,15,16,17,mostLosses,mostPoints,mostTies,mostWins,mostWinsSeasons)
tbl_df(Goalie) %>% select(3,4,losses,ties,wins)
tbl_df(Skater) %>% select(4,5,goals,points)
# view the data set
tbl_df(Franchise) %>%
select(id,contains("Name")) %>%
rename("franchiseId"=id)
tbl_df(TeamTotal) %>%
select(franchiseId,teamId,activeFranchise,gameTypeId,losses,wins,ties,points,pointPctg) %>%
mutate(winPct= wins/(losses+wins+ties))
tbl_df(Season) %>%
select(6,8,10,12,13,14,mostLosses,mostPoints,mostTies,mostWins,mostWinsSeasons) %>%
tbl_df(Goalie) %>%
select(3,4,losses,ties,wins) %>%
mutate(winPct= wins/(losses+wins+ties))
# view the data set
tbl_df(Franchise) %>%
select(id,contains("Name")) %>%
rename("franchiseId"=id)
tbl_df(TeamTotal) %>%
select(franchiseId,teamId,activeFranchise,gameTypeId,losses,wins,ties,points,pointPctg) %>%
mutate(winPct= wins/(losses+wins+ties))
tbl_df(Season) %>%
select(6,8,10,12,13,14,mostLosses,mostPoints,mostTies,mostWins,mostWinsSeasons)
tbl_df(Goalie) %>%
select(3,4,losses,ties,wins) %>%
mutate(winPct= wins/(losses+wins+ties))
tbl_df(Skater) %>%
select(4,5,goals,points)
# view the data set
tbl_df(Franchise) %>%
select(id,contains("Name")) %>%
rename("franchiseId"=id)
tbl_df(TeamTotal) %>%
select(franchiseId,teamId,activeFranchise,gameTypeId,losses,wins,ties,points,pointPctg) %>%
mutate(winPct= wins/(losses+wins+ties))
tbl_df(Season) %>%
select(14,6,8,10,12,13,mostLosses,mostPoints,mostTies,mostWins,mostWinsSeasons)
tbl_df(Goalie) %>%
select(4,3,losses,ties,wins) %>%
mutate(winPct= wins/(losses+wins+ties))
tbl_df(Skater) %>%
select(5,4,goals,points)
